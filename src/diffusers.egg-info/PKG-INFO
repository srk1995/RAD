Metadata-Version: 2.1
Name: diffusers
Version: 0.30.0.dev0
Summary: State-of-the-art diffusion in PyTorch and JAX.
Home-page: https://github.com/huggingface/diffusers
Author: The Hugging Face team (past and future) with the help of all our contributors (https://github.com/huggingface/diffusers/graphs/contributors)
Author-email: diffusers@huggingface.co
License: Apache 2.0 License
Keywords: deep learning diffusion jax pytorch stable diffusion audioldm
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8.0
Description-Content-Type: text/markdown
Provides-Extra: quality
Provides-Extra: docs
Provides-Extra: training
Provides-Extra: test
Provides-Extra: torch
Provides-Extra: flax
Provides-Extra: dev
License-File: LICENSE
License-File: LICENSE_diffusers

# RAD: Region-Aware Diffusion Models for Image Inpainting (CVPR 2025)
This repository provides the official PyTorch implementation of "RAD: Region-Aware Diffusion Models for Image Inpainting".

### [Paper](https://arxiv.org/abs/2412.09191) | [Supplementary Materials](https://openaccess.thecvf.com/content/CVPR2025/supplemental/Kim_RAD_Region-Aware_Diffusion_CVPR_2025_supplemental.pdf) | [Supplementary Video](https://youtu.be/tUESeH0b1Lo)

## Requirements
> - python 3.8.16, pytorch 2.0.1
> - Platform: Ubuntu 22.04, CUDA 11.8
## Installation
```
pip install -e .[torch]
```

## Training
```
python examples/unconditional_image_generation\train_RAD.py --dataset_name merkol/ffhq-256 --pretrained_model_name_or_path xutongda/adm_ffhq_256x256

python examples/unconditional_image_generation\train_RAD.py --dataset_name pcuenq/lsun-bedrooms --pretrained_model_name_or_path xutongda/adm_lsun_bedroom_256x256

python examples/unconditional_image_generation\train_RAD.py --dataset_name imagenet-1k --pretrained_model_name_or_path xutongda/adm_imagenet_256x256_unconditional
```

## Validation data structure
```bash
├── val_data_path
    ├── mask_type1
    │   ├── original
    │   │   ├── image_0001.png
    │   │   ├── image_0002.png
    │   │   └── ...
    │   └─── mask
    │       ├── mask_0001.png
    │       ├── mask_0002.png
    │       └── ...
    ├── mask_type2
    │   ├── original
    │   │   ├── image_0001.png
    │   │   ├── image_0002.png
    │   │   └── ...
    │   └─── mask
    │       ├── mask_0001.png
    │       ├── mask_0002.png
    │       └── ...
    ...
```



## Inpainting
```
python examples/unconditional_image_generation/inpaint.py --val_data_path [your validation image path] --dataset_name merkol/ffhq-256 --pretrained_model_name_or_path xutongda/adm_ffhq_256x256 --resume_from_checkpoint checkpoint-300000

python examples/unconditional_image_generation/inpaint.py --val_data_path [your validation image path] --dataset_name pcuenq/lsun-bedrooms --pretrained_model_name_or_path xutongda/adm_lsun_bedroom_256x256 --resume_from_checkpoint [your checkpoint]

python examples/unconditional_image_generation/inpaint.py --val_data_path [your validation image path] --dataset_name imagenet-1k --pretrained_model_name_or_path xutongda/adm_imagenet_256x256_unconditional --resume_from_checkpoint [your checkpoint]
```


## Reference

```bibtex
@InProceedings{Kim_2025_CVPR,
    author    = {Kim, Sora and Suh, Sungho and Lee, Minsik},
    title     = {RAD: Region-Aware Diffusion Models for Image Inpainting},
    booktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},
    month     = {June},
    year      = {2025},
    pages     = {2439-2448}
}
````


## Acknowledgements
The implementation is based on [Diffusers](https://github.com/huggingface/diffusers).
