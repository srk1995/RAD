06/14/2024 10:42:25 - INFO - __main__ - ***** Running training *****
06/14/2024 10:42:25 - INFO - __main__ -   Num examples = 28000
06/14/2024 10:42:25 - INFO - __main__ -   Num Epochs = 2500
06/14/2024 10:42:25 - INFO - __main__ -   Instantaneous batch size per device = 16
06/14/2024 10:42:25 - INFO - __main__ -   Total train batch size (w. parallel, distributed & accumulation) = 16
06/14/2024 10:42:25 - INFO - __main__ -   Gradient Accumulation steps = 1
06/14/2024 10:42:26 - INFO - __main__ -   Total optimization steps = 4375000
06/14/2024 10:42:26 - INFO - __main__ -   Image path = ddpm-model-mattymchen/celeba-hq-256/Global/generated_images
06/14/2024 10:42:26 - INFO - accelerate.accelerator - Loading states from ddpm-model-mattymchen/celeba-hq-256/Global/checkpoint-10
Resuming from checkpoint checkpoint-10
06/14/2024 10:42:28 - INFO - accelerate.checkpointing - All model weights loaded successfully
06/14/2024 10:42:31 - INFO - accelerate.checkpointing - All optimizer states loaded successfully
06/14/2024 10:42:31 - INFO - accelerate.checkpointing - All scheduler states loaded successfully
06/14/2024 10:42:31 - INFO - accelerate.checkpointing - All dataloader sampler states loaded successfully
06/14/2024 10:42:32 - INFO - accelerate.checkpointing - All random states loaded successfully
06/14/2024 10:42:32 - INFO - accelerate.accelerator - Loading in 0 custom states
Epoch 0:   1%|          | 10/1750 [00:01<04:31,  6.41it/s]/snap/pycharm-professional/391/plugins/python/helpers/pydev/_pydevd_bundle/pydevd_xml.py:346: FutureWarning: Accessing config attribute `__len__` directly via 'UNet2DModel' object attribute is deprecated. Please access '__len__' over 'UNet2DModel's config object instead, e.g. 'unet.config.__len__'.
  elif hasattr(v, '__len__') and not is_string(v):
Traceback (most recent call last):
  File "/home/srk1995/PycharmProjects/diffusers/examples/unconditional_image_generation/train_unconditional.py", line 740, in <module>
    main(args)
  File "/home/srk1995/PycharmProjects/diffusers/examples/unconditional_image_generation/train_unconditional.py", line 584, in main
    noise = torch.randn(clean_images.shape, dtype=weight_dtype, device=clean_images.device)
