05/06/2024 16:27:35 - INFO - __main__ - ***** Running training *****
05/06/2024 16:27:35 - INFO - __main__ -   Num examples = 119915
05/06/2024 16:27:35 - INFO - __main__ -   Num Epochs = 300
05/06/2024 16:27:35 - INFO - __main__ -   Instantaneous batch size per device = 64
05/06/2024 16:27:36 - INFO - __main__ -   Total train batch size (w. parallel, distributed & accumulation) = 64
05/06/2024 16:27:36 - INFO - __main__ -   Gradient Accumulation steps = 1
05/06/2024 16:27:36 - INFO - __main__ -   Total optimization steps = 562200
05/06/2024 16:27:36 - INFO - __main__ -   Image path = ddpm-model-tglcourse/lsun_church_train-128/Local-lsun_church_train-2000-1000-0-b_bar/Inpainting images
Resuming from checkpoint checkpoint-270000
05/06/2024 16:27:37 - INFO - accelerate.accelerator - Loading states from ddpm-model-tglcourse/lsun_church_train-128/Local-lsun_church_train-2000-1000-0-b_bar/checkpoint-270000
05/06/2024 16:27:39 - INFO - accelerate.checkpointing - All model weights loaded successfully
05/06/2024 16:27:44 - INFO - accelerate.checkpointing - All optimizer states loaded successfully
05/06/2024 16:27:44 - INFO - accelerate.checkpointing - All scheduler states loaded successfully
05/06/2024 16:27:44 - INFO - accelerate.checkpointing - All dataloader sampler states loaded successfully
05/06/2024 16:27:44 - INFO - accelerate.checkpointing - All random states loaded successfully
05/06/2024 16:27:44 - INFO - accelerate.accelerator - Loading in 0 custom states
/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
Traceback (most recent call last):
  File "/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 633, in __next__
    data = self._next_data()
  File "/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 677, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/srk1995/PycharmProjects/diffusers/examples/unconditional_image_generation/inpaint.py", line 541, in __getitem__
    return (self.transform(self.image) - 0.5) * 2, 1 - self.transform(self.mask)
  File "/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torchvision/transforms/transforms.py", line 137, in __call__
    return F.to_tensor(pic)
  File "/home/srk1995/anaconda3/envs/ADM/lib/python3.8/site-packages/torchvision/transforms/functional.py", line 140, in to_tensor
    raise TypeError(f"pic should be PIL Image or ndarray. Got {type(pic)}")
